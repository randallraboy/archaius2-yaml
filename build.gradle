plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

apply from: 'version.gradle'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

group = 'com.randallraboy.archaius'

defaultTasks 'clean', 'build'

repositories {
    mavenCentral()
}

dependencies {
    api 'com.netflix.archaius:archaius2-api:2.3.16'

    implementation 'com.netflix.archaius:archaius2-core:2.3.16'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.yaml:snakeyaml:1.29'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

task blah {
    doLast {
        Task.class.getClassLoader().get
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'archaius2-yaml'
                description = 'An archaius2 extension that provides reading a YAML configuration'
                url = 'https://github.com/randallraboy/archaius2-yaml'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'rraboy'
                        name = 'Randall Raboy'
                        email = 'contact@randallraboy.com'
                    }
                }
                scm {
                    connection = 'scm:git:ssh://git@github.com:randallraboy/archaius2-yaml.git'
                    developerConnection = 'scm:git:ssh://git@github.com:randallraboy/archaius2-yaml.git'
                    url = 'https://github.com/randallraboy/archaius2-yaml'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty('publishing.sonatype.username')
                password findProperty('publishing.sonatype.password')
            }
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

wrapper {
    gradleVersion = '7.2'
}
